import{w as a}from"./wallet.js";import"./ethers-vendor.js";import"./react-vendor.js";chrome.runtime.onInstalled.addListener((a=>{"install"===a.reason&&chrome.tabs.create({url:chrome.runtime.getURL("src/onboarding/index.html")})}));const e=async(e,s)=>{const{name:n}=e;if("wallet"!==n)throw new Error(`Unknown message name: ${n}`);await(async(e,s)=>{const n=e.body;try{switch(n.type){case"CREATE_WALLET":await a.createWallet(n.payload.password),s.send({success:!0});break;case"UNLOCK_WALLET":const e=await a.unlockWallet(n.payload.password);s.send({success:e});break;case"ADD_ACCOUNT":const o=await a.addAccount(n.payload.name);s.send({account:o});break;case"SIGN_TRANSACTION":const t=await a.signTransaction(n.payload);s.send({signedTx:t});break;case"CONNECT_SITE":await a.connectSite(n.payload.origin,n.payload.accounts,n.payload.permissions),s.send({success:!0});break;case"DISCONNECT_SITE":await a.disconnectSite(n.payload.origin),s.send({success:!0});break;case"SET_NETWORK":await a.setNetwork(n.payload.chainId),s.send({success:!0});break;case"GET_SESSION":const c=await a.getSession(n.payload.origin);s.send({success:!0,session:c});break;case"SIGN_MESSAGE":const r=await a.signMessage(n.payload.message,n.payload.address);s.send({success:!0,signature:r});break;case"SWITCH_CHAIN":await a.updateNetwork(n.payload.origin,n.payload.chainId),s.send({success:!0});break;default:throw new Error(`Unknown request type: ${n.type}`)}}catch(o){s.send({success:!1,error:o instanceof Error?o.message:"Unknown error"})}})(e,s)};export{e as default};
