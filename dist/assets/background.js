import{walletService as e}from"./wallet.js";import"./ethers-vendor.js";import"./react-vendor.js";const a={},s=function(e,s,t){if(!s||0===s.length)return e();const n=document.getElementsByTagName("link");return Promise.all(s.map((e=>{if(e=function(e,a){return new URL(e,a).href}(e,t),e in a)return;a[e]=!0;const s=e.endsWith(".css"),r=s?'[rel="stylesheet"]':"";if(!!t)for(let a=n.length-1;a>=0;a--){const t=n[a];if(t.href===e&&(!s||"stylesheet"===t.rel))return}else if(document.querySelector(`link[href="${e}"]${r}`))return;const o=document.createElement("link");return o.rel=s?"stylesheet":"modulepreload",s||(o.as="script",o.crossOrigin=""),o.href=e,document.head.appendChild(o),s?new Promise(((a,s)=>{o.addEventListener("load",a),o.addEventListener("error",(()=>s(new Error(`Unable to preload CSS for ${e}`))))})):void 0}))).then((()=>e())).catch((e=>{const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=e,window.dispatchEvent(a),!a.defaultPrevented)throw e}))};chrome.runtime.onInstalled.addListener((e=>{"install"===e.reason&&chrome.tabs.create({url:chrome.runtime.getURL("src/onboarding/index.html")})}));const t=async(a,s)=>{const{name:t}=a;if("wallet"!==t)throw new Error(`Unknown message name: ${t}`);await(async(a,s)=>{const t=a.body;try{switch(t.type){case"CREATE_WALLET":await e.createWallet(t.payload.password),s.send({success:!0});break;case"UNLOCK_WALLET":const a=await e.unlockWallet(t.payload.password);s.send({success:a});break;case"ADD_ACCOUNT":const n=await e.addAccount(t.payload.name);s.send({account:n});break;case"SIGN_TRANSACTION":const r=await e.signTransaction(t.payload);s.send({signedTx:r});break;case"CONNECT_SITE":await e.connectSite(t.payload.origin,t.payload.accounts,t.payload.permissions),s.send({success:!0});break;case"DISCONNECT_SITE":await e.disconnectSite(t.payload.origin),s.send({success:!0});break;case"SET_NETWORK":await e.setNetwork(t.payload.chainId),s.send({success:!0});break;case"GET_SESSION":const o=await e.getSession(t.payload.origin);s.send({success:!0,session:o});break;case"SIGN_MESSAGE":const c=await e.signMessage(t.payload.message,t.payload.address);s.send({success:!0,signature:c});break;case"SWITCH_CHAIN":await e.updateNetwork(t.payload.origin,t.payload.chainId),s.send({success:!0});break;default:throw new Error(`Unknown request type: ${t.type}`)}}catch(n){s.send({success:!1,error:n instanceof Error?n.message:"Unknown error"})}})(a,s)};chrome.runtime.onMessage.addListener((async(e,a,t)=>{if(e&&"FREOBUS_REQUEST"===e.type){const{id:a,args:r}=e;let o,c;try{if("eth_accounts"===r.method||"eth_requestAccounts"===r.method){const e=(await s((()=>import("./wallet.js")),["./wallet.js","./ethers-vendor.js","./react-vendor.js"],import.meta.url)).walletService,a=await e.getState();o=a.isUnlocked&&a.accounts.length>0?a.accounts.map((e=>e.address)):[]}else o=null}catch(n){c=n.message||"Unknown error"}return t({type:"FREOBUS_RESPONSE",id:a,result:o,error:c}),!0}}));export{t as default};
