var e,t,n=Object.defineProperty,s=(e,t,s)=>(((e,t,s)=>{t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s})(e,"symbol"!=typeof t?t+"":t,s),s);import{e as i}from"./events.js";import{J as r}from"./ethers-vendor.js";import"./react-vendor.js";class a extends i.EventEmitter{constructor(){super(),s(this,"isInitialized",!1),s(this,"accounts",[]),s(this,"chainId","0xaa36a7"),s(this,"rpcUrl","https://sepolia.infura.io/v3/6131105f1e4c4841a297c5392effa977"),s(this,"_eventEmitter"),s(this,"ethersProvider"),this._eventEmitter=new i.EventEmitter,this.ethersProvider=new r(this.rpcUrl),this.initialize()}async initialize(){try{this.injectProvider();if(!(await this.sendMessage("checkPermission",{method:"web3"})))return;this.isInitialized=!0;const[e,t]=await Promise.all([this.sendMessage("eth_accounts",{}),this.sendMessage("eth_chainId",{})]);this.accounts=(null==e?void 0:e.accounts)||[],this.chainId=(null==t?void 0:t.chainId)||"0x1",this.accounts.length>0&&(this._eventEmitter.emit("connect",{chainId:this.chainId}),this._eventEmitter.emit("accountsChanged",this.accounts))}catch(e){}}injectProvider(){const e={isFreoWallet:!0,request:async e=>{try{switch(e.method){case"eth_chainId":return this.chainId;case"eth_accounts":return this.accounts;case"eth_blockNumber":return(await this.ethersProvider.getBlockNumber()).toString();case"eth_getBalance":{const[t,n]=e.params||[];return(await this.ethersProvider.getBalance(t,n)).toHexString()}default:return await this.sendMessage(e.method,{params:e.params})}}catch(t){if(t instanceof Error)throw new Error(`FreoBus: ${t.message}`);throw new Error("FreoBus: Unknown error")}},send:async(e,t)=>{try{t(null,await this.sendMessage(e.method,{params:e.params}))}catch(n){t(n,null)}},on:(e,t)=>{this._eventEmitter.on(e,t)},removeListener:(e,t)=>{this._eventEmitter.removeListener(e,t)},isConnected:()=>this.isInitialized,chainId:this.chainId,selectedAddress:this.accounts[0]||null,_eventEmitter:this._eventEmitter};window.ethereum=e,window.FreoBus=e}async sendMessage(e,t){return new Promise(((n,s)=>{chrome.runtime.sendMessage({type:e,data:t},(e=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e.success?n(e.value):s(new Error(e.error))}))}))}}(null==(e=globalThis.browser)?void 0:e.tabs)||null==(t=globalThis.chrome)||t.tabs;var o=async e=>(()=>{var e,t;let n=(null==(e=globalThis.browser)?void 0:e.runtime)||(null==(t=globalThis.chrome)?void 0:t.runtime);if(!n)throw new Error("Extension runtime is not available");return n})().sendMessage(e.extensionId??null,e);async function c(e){return await o({name:"wallet",body:{type:"SWITCH_CHAIN",payload:{origin:window.location.origin,chainId:e}}})}!function(){const e=document.createElement("script");e.src=chrome.runtime.getURL("assets/inpage.js"),e.type="text/javascript",e.async=!1,(document.head||document.documentElement).appendChild(e),e.onload=()=>{e.remove()}}(),new a;new MutationObserver((()=>{var e;const t=document.querySelector(".network-badge");if(t){const n=null==(e=t.textContent)?void 0:e.toLowerCase();(null==n?void 0:n.includes("polygon"))?c("0x89"):(null==n?void 0:n.includes("ethereum"))&&c("0x1")}})).observe(document.body,{childList:!0,subtree:!0}),window.addEventListener("message",(e=>{var t,n;if(e.source!==window)return;if(!(null==(n=null==(t=e.data)?void 0:t.type)?void 0:n.startsWith("FREOBUS_")))return;const{type:s}=e.data;if("FREOBUS_READY"===s)window.postMessage({type:"FREOBUS_PROVIDER_READY"},"*")}));
